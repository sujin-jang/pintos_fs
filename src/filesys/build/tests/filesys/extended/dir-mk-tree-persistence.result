FAIL
Kernel panic in file system extraction run: PANIC at ../../devices/disk.c:436 in select_sector(): assertion `sec_no < d->capacity' failed.
Call stack: 0xc01073bc 0xc01046ba 0xc0104a40 0xc010c783 0xc010cb9a 0xc010bd84 0xc010af6c 0xc01017ed 0xc010191f 0x804a90b 0x8048561 0x804854a 0x804869a 0x8048e84
Translation of call stack:
0xc01073bc: debug_panic (.../../lib/kernel/debug.c:34)
0xc01046ba: select_sector (.../../../devices/disk.c:437)
0xc0104a40: disk_read (.../../../devices/disk.c:230)
0xc010c783: byte_to_sector (.../../../filesys/inode.c:72)
0xc010cb9a: inode_read_at (...../../filesys/inode.c:273)
0xc010bd84: dir_readdir (..../filesys/directory.c:252)
0xc010af6c: syscall_readdir (...../userprog/syscall.c:512)
0xc01017ed: intr_handler (..../threads/interrupt.c:361)
0xc010191f: intr_entry (threads/intr-stubs.S:38)
0x0804a90b: (unknown)
0x08048561: (unknown)
0x0804854a: (unknown)
0x0804869a: (unknown)
0x08048e84: (unknown)

This assertion commonly fails when accessing a file via an inode that
has been closed and freed.  Freeing an inode clears all its sector
indexes to 0xcccccccc, which is not a valid sector number for disks
smaller than about 1.6 TB.
